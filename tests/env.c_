#include <string.h>
#include <stdio.h>
#include <wctype.h>
#include "../util.h"
#include "../vec.h"
#include "../set.h"
int
main()
{
	char buf[80];
	char ident[80];
	char tmp[80];
	char var[80];
	size_t len;
	size_t ext;
	size_t off;
	Set *env;
	Vector(char *) *rep;

	env = set_alloc();

	for (;;) {
		fgets(buf, 80, stdin);
		len = strlen(buf);

		if (feof(stdin)) exit(0);

		/* eat leading space */
		eat(ext, buf, iswspace(wc));
		off = ext;

		/* eat identifier */
		eat(ext, buf, !iswspace(wc));
		memcpy(ident, buf+off, ext);
		off += ext;
		ident[ext] = 0;

		/* assignment or query? */
		eat(ext, buf+off, !wcsncmp(&wc, L"=", 1));

		off += ext;

		if (ext == len-off-1) {
		/* query */
			/* membership check */
			if (!set_prefixs(env, ident)) {
				printf("no such env\n");
				fflush(stdout);
				continue;
			}
			
			/* bug */
			rep = set_querys(env, ident);
			if (len(rep) > 1) {
				printf("many such env\n");
				fflush(stdout);
				continue;
			}

			/* finally */
			printf("%s = %s\n", ident, arr(rep)[0]);
			fflush(stdout);

			continue;
		}

		/* eat more space */
		eat(ext, buf+off, iswspace(wc));
		off += ext;
		++off;
		/* eat more space */
		eat(ext, buf+off, iswspace(wc));
		off += ext;

		/* eat assignment */
		eat(ext, buf+off, !iswspace(wc));

		/* snprintf needs a unknown length string */
		memcpy(tmp, buf+off, ext);
		tmp[ext] = 0;

		snprintf(var, 80, "%s=%s", ident, tmp);

		/* do it */
		set_adds(env, var);
	}
}
